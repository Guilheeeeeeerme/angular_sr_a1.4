{"version":3,"sources":["./src/app/podcasts/list-view/podcast-list-view.component.ts","./src/app/podcasts/list-view/podcast-list-view.component.html","./src/app/podcasts/podcasts-routing.module.ts","./src/app/podcasts/podcasts.module.ts"],"names":[],"mappings":"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","file":"src-app-podcasts-podcasts-module-es2015.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { Podcast } from \"@core/models/podcast\";\r\nimport { PodcastService } from \"@core/services/podcast.service\";\r\nimport { combineLatest, Subscription } from \"rxjs\";\r\n\r\nimport { PodcastGenre } from \"@core/models/podcast-genre\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { decrementPodcastGenrePage, incrementPodcastGenrePage } from \"src/app/store/podcast.actions\";\r\nimport { PodcastState } from \"src/app/store/podcast.reducer\";\r\nimport { getPodcastState } from \"src/app/store/podcast.selectors\";\r\n\r\n@Component({\r\n  selector: 'podcasts-list',\r\n  templateUrl: './podcast-list-view.component.html',\r\n  styleUrls: ['./podcast-list-view.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PodcastListViewComponent implements OnInit, OnDestroy {\r\n\r\n  private subscription: Subscription = new Subscription;\r\n\r\n  public podcasts: Podcast[] = [];\r\n  public genres: PodcastGenre[] = [];\r\n\r\n  public offset = 0;\r\n  public total_pages = 0;\r\n  public page_number = 0;\r\n\r\n  public get has_prev () { return this.page_number > 0 }\r\n  public get has_next () { return (this.total_pages - this.page_number) > 1 }\r\n\r\n  constructor(\r\n    private podcastService: PodcastService,\r\n    private store: Store<PodcastState>,\r\n  ) {\r\n    console.log('got here');\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    /**\r\n     * The list will be reloaded when the state change\r\n     */\r\n    this.subscription.add(combineLatest([\r\n      this.store.pipe(select(getPodcastState)),\r\n      this.podcastService.getPodcastGenres(),\r\n    ]).subscribe(([podcastListState, genres]) => {\r\n\r\n      this.genres = genres;\r\n\r\n      let podcasts: Podcast[] = [];\r\n      let total_pages = 0;\r\n      let offset = 0;\r\n\r\n      const { genre_id, page_number, page_size } = podcastListState;\r\n\r\n      if (genres.length > 0) {\r\n\r\n        var genrePodcasts = genres.filter(g => g.id == genre_id);\r\n\r\n        if (genrePodcasts.length > 0) {\r\n\r\n          offset = page_number * page_size;\r\n          const offset_limit = offset + page_size;\r\n\r\n          podcasts = genrePodcasts[0].podcasts;\r\n          if (podcasts?.length > 0) {\r\n            total_pages = Math.ceil(podcasts?.length / page_size)\r\n            podcasts = podcasts.slice(offset, offset_limit)\r\n          }\r\n        }\r\n      }\r\n\r\n      this.page_number = page_number;\r\n      this.total_pages = total_pages;\r\n      this.offset = offset;\r\n      this.podcasts = podcasts;\r\n\r\n    }))\r\n\r\n  }\r\n\r\n  getRankingForIndex(index: number) {\r\n    return (index + this.offset + 1)\r\n  }\r\n\r\n  goPrev() {\r\n    this.store.dispatch(decrementPodcastGenrePage());\r\n  }\r\n\r\n  goNext() {\r\n    this.store.dispatch(incrementPodcastGenrePage());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}","<div class=\"podcasts__container\">\n\n  <genre-picker class=\"podcasts__container__genre__picker\" [genres]=\"genres\"></genre-picker>\n\n  <podcast-listing *ngFor=\"let podcast of podcasts; let i = index\" [podcast]=\"podcast\" [index]=\"getRankingForIndex(i)\">\n  </podcast-listing>\n\n  <div class=\"podcasts__container__pagination\">\n    <div class=\"podcasts__container__pagination__button podcasts__container__pagination__button__prev\">\n      <button class=\"button prev\" [disabled]=\"!has_prev\" (click)=\"has_prev && goPrev()\"></button>\n    </div>\n    <h4 class=\"podcasts__container__pagination__page gradient__text\">\n      {{ page_number + 1 }} of {{ total_pages }}\n    </h4>\n    <div class=\"podcasts__container__pagination__button podcasts__container__pagination__button__next\">\n      <button class=\"button next\" [disabled]=\"!has_next\" (click)=\"has_next && goNext()\"></button>\n    </div>\n  </div>\n\n</div>","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { PodcastListViewComponent } from \"./list-view/podcast-list-view.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PodcastListViewComponent\n  }\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ]\n})\nexport class PodcastsRoutingModule {}","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { SharedModule } from \"../@shared/shared.module\";\nimport { PodcastListViewComponent } from \"./list-view/podcast-list-view.component\";\nimport { PodcastsRoutingModule } from \"./podcasts-routing.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    PodcastsRoutingModule,\n  ],\n  declarations: [\n    PodcastListViewComponent,\n  ],\n})\nexport class PodcastsModule { }"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["webpack:///src/app/podcasts/list-view/podcast-list-view.component.ts","webpack:///src/app/podcasts/list-view/podcast-list-view.component.html","webpack:///src/app/podcasts/podcasts-routing.module.ts","webpack:///src/app/podcasts/podcasts.module.ts"],"names":["PodcastListViewComponent","podcastService","store","subscription","podcasts","genres","offset","total_pages","page_number","console","log","add","pipe","getPodcastGenres","subscribe","podcastListState","genre_id","page_size","length","genrePodcasts","filter","g","id","offset_limit","Math","ceil","slice","index","dispatch","unsubscribe","goPrev","goNext","selector","templateUrl","styleUrls","encapsulation","None","routes","path","component","PodcastsRoutingModule","forChild","imports","exports","PodcastsModule","declarations"],"mappings":"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","file":"src-app-podcasts-podcasts-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { Podcast } from \"@core/models/podcast\";\r\nimport { PodcastService } from \"@core/services/podcast.service\";\r\nimport { combineLatest, Subscription } from \"rxjs\";\r\n\r\nimport { PodcastGenre } from \"@core/models/podcast-genre\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { decrementPodcastGenrePage, incrementPodcastGenrePage } from \"src/app/store/podcast.actions\";\r\nimport { PodcastState } from \"src/app/store/podcast.reducer\";\r\nimport { getPodcastState } from \"src/app/store/podcast.selectors\";\r\n\r\n@Component({\r\n  selector: 'podcasts-list',\r\n  templateUrl: './podcast-list-view.component.html',\r\n  styleUrls: ['./podcast-list-view.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PodcastListViewComponent implements OnInit, OnDestroy {\r\n\r\n  private subscription: Subscription = new Subscription;\r\n\r\n  public podcasts: Podcast[] = [];\r\n  public genres: PodcastGenre[] = [];\r\n\r\n  public offset = 0;\r\n  public total_pages = 0;\r\n  public page_number = 0;\r\n\r\n  public get has_prev () { return this.page_number > 0 }\r\n  public get has_next () { return (this.total_pages - this.page_number) > 1 }\r\n\r\n  constructor(\r\n    private podcastService: PodcastService,\r\n    private store: Store<PodcastState>,\r\n  ) {\r\n    console.log('got here');\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    /**\r\n     * The list will be reloaded when the state change\r\n     */\r\n    this.subscription.add(combineLatest([\r\n      this.store.pipe(select(getPodcastState)),\r\n      this.podcastService.getPodcastGenres(),\r\n    ]).subscribe(([podcastListState, genres]) => {\r\n\r\n      this.genres = genres;\r\n\r\n      let podcasts: Podcast[] = [];\r\n      let total_pages = 0;\r\n      let offset = 0;\r\n\r\n      const { genre_id, page_number, page_size } = podcastListState;\r\n\r\n      if (genres.length > 0) {\r\n\r\n        var genrePodcasts = genres.filter(g => g.id == genre_id);\r\n\r\n        if (genrePodcasts.length > 0) {\r\n\r\n          offset = page_number * page_size;\r\n          const offset_limit = offset + page_size;\r\n\r\n          podcasts = genrePodcasts[0].podcasts;\r\n          if (podcasts?.length > 0) {\r\n            total_pages = Math.ceil(podcasts?.length / page_size)\r\n            podcasts = podcasts.slice(offset, offset_limit)\r\n          }\r\n        }\r\n      }\r\n\r\n      this.page_number = page_number;\r\n      this.total_pages = total_pages;\r\n      this.offset = offset;\r\n      this.podcasts = podcasts;\r\n\r\n    }))\r\n\r\n  }\r\n\r\n  getRankingForIndex(index: number) {\r\n    return (index + this.offset + 1)\r\n  }\r\n\r\n  goPrev() {\r\n    this.store.dispatch(decrementPodcastGenrePage());\r\n  }\r\n\r\n  goNext() {\r\n    this.store.dispatch(incrementPodcastGenrePage());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}","<div class=\"podcasts__container\">\n\n  <genre-picker class=\"podcasts__container__genre__picker\" [genres]=\"genres\"></genre-picker>\n\n  <podcast-listing *ngFor=\"let podcast of podcasts; let i = index\" [podcast]=\"podcast\" [index]=\"getRankingForIndex(i)\">\n  </podcast-listing>\n\n  <div class=\"podcasts__container__pagination\">\n    <div class=\"podcasts__container__pagination__button podcasts__container__pagination__button__prev\">\n      <button class=\"button prev\" [disabled]=\"!has_prev\" (click)=\"has_prev && goPrev()\"></button>\n    </div>\n    <h4 class=\"podcasts__container__pagination__page gradient__text\">\n      {{ page_number + 1 }} of {{ total_pages }}\n    </h4>\n    <div class=\"podcasts__container__pagination__button podcasts__container__pagination__button__next\">\n      <button class=\"button next\" [disabled]=\"!has_next\" (click)=\"has_next && goNext()\"></button>\n    </div>\n  </div>\n\n</div>","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { PodcastListViewComponent } from \"./list-view/podcast-list-view.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PodcastListViewComponent\n  }\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ]\n})\nexport class PodcastsRoutingModule {}","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { SharedModule } from \"../@shared/shared.module\";\nimport { PodcastListViewComponent } from \"./list-view/podcast-list-view.component\";\nimport { PodcastsRoutingModule } from \"./podcasts-routing.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    PodcastsRoutingModule,\n  ],\n  declarations: [\n    PodcastListViewComponent,\n  ],\n})\nexport class PodcastsModule { }"]}